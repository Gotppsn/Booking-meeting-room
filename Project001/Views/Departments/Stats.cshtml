@model IEnumerable<dynamic>

@{
    ViewData["Title"] = "Department Statistics";
}

<div class="max-w-6xl mx-auto">
    <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
            <div class="flex justify-between items-center">
                <div>
                    <h1 class="text-2xl font-semibold text-gray-900">Department Statistics</h1>
                    <p class="text-sm text-gray-500 mt-1">Overview of all active departments and their metrics</p>
                </div>
                <a asp-action="Index" class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md text-sm transition-colors duration-200">
                    Back to Departments
                </a>
            </div>
        </div>

        @if (Model.Any())
        {
            <!-- Summary Cards -->
            <div class="p-6 border-b border-gray-200">
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                    <div class="text-center p-4 bg-blue-50 rounded-lg">
                        <div class="text-3xl font-bold text-blue-600">@Model.Count()</div>
                        <div class="text-sm text-gray-600 mt-1">Active Departments</div>
                    </div>
                    <div class="text-center p-4 bg-green-50 rounded-lg">
                        <div class="text-3xl font-bold text-green-600">@Model.Sum(d => d.UserCount)</div>
                        <div class="text-sm text-gray-600 mt-1">Total Users</div>
                    </div>
                    <div class="text-center p-4 bg-yellow-50 rounded-lg">
                        <div class="text-3xl font-bold text-yellow-600">@Model.Sum(d => d.TotalBookings)</div>
                        <div class="text-sm text-gray-600 mt-1">Total Bookings</div>
                    </div>
                    <div class="text-center p-4 bg-purple-50 rounded-lg">
                        <div class="text-3xl font-bold text-purple-600">@Model.Sum(d => d.UpcomingBookings)</div>
                        <div class="text-sm text-gray-600 mt-1">Upcoming Bookings</div>
                    </div>
                </div>
            </div>

            <!-- Department Stats Grid -->
            <div class="p-6">
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    @foreach (var department in Model.OrderByDescending(d => d.UserCount))
                    {
                        <div class="border border-gray-200 rounded-lg overflow-hidden">
                            <!-- Department Header -->
                            <div class="p-4" style="background-color: @(department.ColorCode + "10");">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center">
                                        <div class="w-5 h-5 rounded-full mr-3" style="background-color: @department.ColorCode"></div>
                                        <h3 class="text-lg font-semibold text-gray-900">@department.DepartmentName</h3>
                                    </div>
                                    <div class="text-sm text-gray-600">
                                        @department.UserCount user@(department.UserCount != 1 ? "s" : "")
                                    </div>
                                </div>
                            </div>

                            <!-- Department Metrics -->
                            <div class="p-4">
                                <div class="grid grid-cols-3 gap-4">
                                    <div class="text-center">
                                        <div class="text-2xl font-bold text-gray-900">@department.UserCount</div>
                                        <div class="text-xs text-gray-600">Users</div>
                                    </div>
                                    <div class="text-center">
                                        <div class="text-2xl font-bold text-blue-600">@department.TotalBookings</div>
                                        <div class="text-xs text-gray-600">Total Bookings</div>
                                    </div>
                                    <div class="text-center">
                                        <div class="text-2xl font-bold text-green-600">@department.UpcomingBookings</div>
                                        <div class="text-xs text-gray-600">Upcoming</div>
                                    </div>
                                </div>

                                <!-- Progress Bars -->
                                <div class="mt-4 space-y-3">
                                    <!-- User Activity -->
                                    @if (Model.Max(d => d.UserCount) > 0)
                                    {
                                        <div>
                                            <div class="flex justify-between text-xs text-gray-600 mb-1">
                                                <span>User Count</span>
                                                <span>@department.UserCount / @Model.Max(d => d.UserCount)</span>
                                            </div>
                                            <div class="w-full bg-gray-200 rounded-full h-2">
                                                <div class="bg-blue-600 h-2 rounded-full" style="width: @(department.UserCount * 100.0 / Model.Max(d => d.UserCount))%"></div>
                                            </div>
                                        </div>
                                    }

                                    <!-- Booking Activity -->
                                    @if (Model.Max(d => d.TotalBookings) > 0)
                                    {
                                        <div>
                                            <div class="flex justify-between text-xs text-gray-600 mb-1">
                                                <span>Booking Activity</span>
                                                <span>@department.TotalBookings / @Model.Max(d => d.TotalBookings)</span>
                                            </div>
                                            <div class="w-full bg-gray-200 rounded-full h-2">
                                                <div class="bg-green-600 h-2 rounded-full" style="width: @(department.TotalBookings * 100.0 / Model.Max(d => d.TotalBookings))%"></div>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <!-- Metrics -->
                                <div class="mt-4 pt-4 border-t border-gray-200">
                                    <div class="grid grid-cols-2 gap-4 text-sm">
                                        <div>
                                            <span class="text-gray-600">Avg bookings per user:</span>
                                            <div class="font-medium">
                                                @(department.UserCount > 0 ? Math.Round((double)department.TotalBookings / department.UserCount, 1) : 0)
                                            </div>
                                        </div>
                                        <div>
                                            <span class="text-gray-600">Upcoming ratio:</span>
                                            <div class="font-medium">
                                                @(department.TotalBookings > 0 ? Math.Round((double)department.UpcomingBookings * 100 / department.TotalBookings, 1) : 0)%
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Quick Actions -->
                                <div class="mt-4 pt-4 border-t border-gray-200">
                                    <div class="flex space-x-2">
                                        <a asp-action="Details" asp-route-id="@department.DepartmentId" 
                                           class="flex-1 text-center bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-2 rounded-md text-sm transition-colors duration-200">
                                            View Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Detailed Statistics Table -->
            <div class="border-t border-gray-200">
                <div class="px-6 py-4">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Detailed Statistics</h3>
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Department</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Users</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total Bookings</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Upcoming</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Avg per User</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Activity</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @foreach (var department in Model.OrderByDescending(d => d.TotalBookings))
                                {
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="flex items-center">
                                                <div class="w-4 h-4 rounded-full mr-3" style="background-color: @department.ColorCode"></div>
                                                <div class="text-sm font-medium text-gray-900">@department.DepartmentName</div>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@department.UserCount</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@department.TotalBookings</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@department.UpcomingBookings</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                            @(department.UserCount > 0 ? Math.Round((double)department.TotalBookings / department.UserCount, 1) : 0)
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="flex items-center">
                                                <div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
                                                    @if (Model.Max(d => d.TotalBookings) > 0)
                                                    {
                                                        <div class="bg-blue-600 h-2 rounded-full" style="width: @(department.TotalBookings * 100.0 / Model.Max(d => d.TotalBookings))%"></div>
                                                    }
                                                </div>
                                                <span class="text-xs text-gray-600">
                                                    @(Model.Max(d => d.TotalBookings) > 0 ? Math.Round(department.TotalBookings * 100.0 / Model.Max(d => d.TotalBookings), 0) : 0)%
                                                </span>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="p-12 text-center">
                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M9 17a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H11a2 2 0 01-2-2v-6zM21 17a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2h-6a2 2 0 01-2-2v-6zM33 17a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2h-6a2 2 0 01-2-2v-6zM9 29a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H11a2 2 0 01-2-2v-6zM21 29a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2h-6a2 2 0 01-2-2v-6zM33 29a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2h-6a2 2 0 01-2-2v-6z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">No department statistics available</h3>
                <p class="mt-1 text-sm text-gray-500">There are no active departments to display statistics for.</p>
                <div class="mt-6">
                    <a asp-action="Create" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm transition-colors duration-200">
                        Create First Department
                    </a>
                </div>
            </div>
        }
    </div>
</div>