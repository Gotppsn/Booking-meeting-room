@model IEnumerable<Project001.Models.Entities.Department>

@{
    ViewData["Title"] = "Department Management";
}

<div class="bg-white shadow rounded-lg">
    <div class="px-6 py-4 border-b border-gray-200">
        <div class="flex justify-between items-center">
            <h1 class="text-2xl font-semibold text-gray-900">Department Management</h1>
            <div class="flex space-x-2">
                <a asp-action="Stats" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                    View Statistics
                </a>
                <a asp-action="Create" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                    Add Department
                </a>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
        <form method="get" class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
                <label for="search" class="block text-sm font-medium text-gray-700 mb-1">Search</label>
                <input type="text" name="search" id="search" value="@ViewData["Search"]" 
                       placeholder="Department name..." 
                       class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
            </div>
            <div>
                <label for="isActive" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                <select name="isActive" id="isActive" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    <option value="">All Departments</option>
                    <option value="true" selected="@(ViewData["IsActive"] as bool? == true)">Active</option>
                    <option value="false" selected="@(ViewData["IsActive"] as bool? == false)">Inactive</option>
                </select>
            </div>
            <div class="flex items-end">
                <button type="submit" class="w-full bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                    Filter
                </button>
            </div>
        </form>
    </div>

    <!-- Departments Grid -->
    <div class="p-6">
        @if (Model.Any())
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                @foreach (var department in Model)
                {
                    <div class="border border-gray-200 rounded-lg overflow-hidden hover:shadow-md transition-shadow duration-200">
                        <!-- Department Header -->
                        <div class="p-4" style="background-color: @(department.ColorCode + "10");">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center">
                                    <div class="w-4 h-4 rounded-full mr-3" style="background-color: @department.ColorCode"></div>
                                    <h3 class="text-lg font-semibold text-gray-900">@department.Name</h3>
                                </div>
                                @if (department.IsActive)
                                {
                                    <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                                        Active
                                    </span>
                                }
                                else
                                {
                                    <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full">
                                        Inactive
                                    </span>
                                }
                            </div>
                        </div>

                        <!-- Department Content -->
                        <div class="p-4">
                            <!-- Multi-language Names -->
                            @if (!string.IsNullOrEmpty(department.NameTh) || !string.IsNullOrEmpty(department.NameJa))
                            {
                                <div class="mb-4">
                                    <h4 class="text-sm font-medium text-gray-700 mb-2">Localized Names</h4>
                                    <div class="space-y-1 text-sm text-gray-600">
                                        @if (!string.IsNullOrEmpty(department.NameTh))
                                        {
                                            <div><span class="font-medium">Thai:</span> @department.NameTh</div>
                                        }
                                        @if (!string.IsNullOrEmpty(department.NameJa))
                                        {
                                            <div><span class="font-medium">Japanese:</span> @department.NameJa</div>
                                        }
                                    </div>
                                </div>
                            }

                            <!-- Statistics -->
                            <div class="grid grid-cols-2 gap-4 mb-4">
                                <div class="text-center p-3 bg-gray-50 rounded-md">
                                    <div class="text-2xl font-bold text-gray-900">@department.Users.Count(u => u.IsActive)</div>
                                    <div class="text-sm text-gray-600">Active Users</div>
                                </div>
                                <div class="text-center p-3 bg-gray-50 rounded-md">
                                    <div class="text-2xl font-bold text-gray-900">@department.Users.Count</div>
                                    <div class="text-sm text-gray-600">Total Users</div>
                                </div>
                            </div>

                            <!-- Metadata -->
                            <div class="text-sm text-gray-500 mb-4">
                                <div>Created: @department.CreatedAt.ToString("MMM dd, yyyy")</div>
                                @if (department.UpdatedAt != department.CreatedAt)
                                {
                                    <div>Updated: @department.UpdatedAt.ToString("MMM dd, yyyy")</div>
                                }
                            </div>

                            <!-- Actions -->
                            <div class="flex space-x-2">
                                <a asp-action="Details" asp-route-id="@department.Id" 
                                   class="flex-1 text-center bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-md text-sm transition-colors duration-200">
                                    View Details
                                </a>
                                <a asp-action="Edit" asp-route-id="@department.Id" 
                                   class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-2 rounded-md text-sm transition-colors duration-200">
                                    Edit
                                </a>
                                <form asp-action="ToggleActive" asp-route-id="@department.Id" method="post" class="inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" 
                                            class="@(department.IsActive ? "bg-red-600 hover:bg-red-700" : "bg-green-600 hover:bg-green-700") text-white px-3 py-2 rounded-md text-sm transition-colors duration-200"
                                            onclick="return confirm('@(department.IsActive ? "Deactivate" : "Activate") this department?')">
                                        @(department.IsActive ? "Deactivate" : "Activate")
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M34 40h10v-4a6 6 0 00-10.712-3.714M34 40H14m20 0v-4a9.971 9.971 0 00-.712-3.714M14 40H4v-4a6 6 0 0110.713-3.714M14 40v-4c0-1.313.253-2.566.713-3.714m0 0A10.003 10.003 0 0124 26c4.21 0 7.813 2.602 9.288 6.286M30 14a6 6 0 11-12 0 6 6 0 0112 0zm12 6a4 4 0 11-8 0 4 4 0 018 0zm-28 0a4 4 0 11-8 0 4 4 0 018 0z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">No departments found</h3>
                <p class="mt-1 text-sm text-gray-500">Get started by creating your first department.</p>
                <div class="mt-6">
                    <a asp-action="Create" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm transition-colors duration-200">
                        Add Department
                    </a>
                </div>
            </div>
        }
    </div>

    @if (Model.Any())
    {
        <!-- Summary Footer -->
        <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-gray-600">
                <div class="text-center">
                    <span class="font-medium">Total Departments:</span> @Model.Count()
                </div>
                <div class="text-center">
                    <span class="font-medium">Active:</span> @Model.Count(d => d.IsActive)
                </div>
                <div class="text-center">
                    <span class="font-medium">Total Users:</span> @Model.Sum(d => d.Users.Count)
                </div>
            </div>
        </div>
    }
</div>