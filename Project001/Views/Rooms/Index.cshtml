@using Microsoft.Extensions.Localization
@using Project001.Resources
@inject IStringLocalizer<SharedResource> Localizer
@model IEnumerable<Project001.Models.Entities.Room>

@{
    ViewData["Title"] = Localizer["MeetingRooms"];
}

<div class="bg-white shadow rounded-lg">
    <div class="px-6 py-4 border-b border-gray-200">
        <div class="flex justify-between items-center">
            <h1 class="text-2xl font-semibold text-gray-900">@Localizer["MeetingRooms"]</h1>
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="Create" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                    @Localizer["AddRoom"]
                </a>
            }
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
        <form method="get" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <div>
                <label for="search" class="block text-sm font-medium text-gray-700 mb-1">@Localizer["Search"]</label>
                <input type="text" name="search" id="search" value="@ViewData["Search"]" 
                       placeholder="@Localizer["RoomSearchPlaceholder"]" 
                       class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
            </div>
            <div>
                <label for="capacity" class="block text-sm font-medium text-gray-700 mb-1">@Localizer["MinCapacity"]</label>
                <input type="number" name="capacity" id="capacity" value="@ViewData["Capacity"]" 
                       placeholder="@Localizer["MinimumCapacity"]" min="1"
                       class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
            </div>
            <div class="flex items-center space-x-4 pt-6">
                <label class="flex items-center">
                    <input type="checkbox" name="hasProjector" value="true" @(ViewData["HasProjector"] as bool? == true ? "checked" : "") 
                           class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                    <span class="ml-2 text-sm text-gray-700">@Localizer["Projector"]</span>
                </label>
                <label class="flex items-center">
                    <input type="checkbox" name="hasVideoConference" value="true" @(ViewData["HasVideoConference"] as bool? == true ? "checked" : "") 
                           class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                    <span class="ml-2 text-sm text-gray-700">@Localizer["VideoConference"]</span>
                </label>
            </div>
            <div class="flex items-end">
                <button type="submit" class="w-full bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                    @Localizer["Filter"]
                </button>
            </div>
        </form>
    </div>

    <!-- Rooms Grid -->
    <div class="p-6">
        @if (Model.Any())
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                @foreach (var room in Model)
                {
                    <div class="border border-gray-200 rounded-lg overflow-hidden hover:shadow-md transition-shadow duration-200">
                        @if (!string.IsNullOrEmpty(room.ImageUrl))
                        {
                            <img src="@room.ImageUrl" alt="@room.Name" class="w-full h-48 object-cover">
                        }
                        else
                        {
                            <div class="w-full h-48 bg-gray-100 flex items-center justify-center">
                                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                                </svg>
                            </div>
                        }
                        <div class="p-4">
                            <h3 class="text-lg font-semibold text-gray-900 mb-2">@room.Name</h3>
                            
                            <div class="text-sm text-gray-600 space-y-1 mb-4">
                                <p><span class="font-medium">Capacity:</span> @room.Capacity people</p>
                                @if (!string.IsNullOrEmpty(room.Location))
                                {
                                    <p><span class="font-medium">Location:</span> @room.Location</p>
                                }
                                @if (!string.IsNullOrEmpty(room.Floor))
                                {
                                    <p><span class="font-medium">Floor:</span> @room.Floor</p>
                                }
                            </div>

                            <!-- Equipment Icons -->
                            <div class="flex flex-wrap gap-2 mb-4">
                                @if (room.HasProjector)
                                {
                                    <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full">
                                        Projector
                                    </span>
                                }
                                @if (room.HasVideoConference)
                                {
                                    <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                                        Video Conf
                                    </span>
                                }
                                @if (room.HasWhiteboard)
                                {
                                    <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-800 rounded-full">
                                        Whiteboard
                                    </span>
                                }
                                @if (room.HasPhone)
                                {
                                    <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-purple-100 text-purple-800 rounded-full">
                                        Phone
                                    </span>
                                }
                            </div>

                            <!-- Status Badge -->
                            <div class="mb-4">
                                @switch (room.Status)
                                {
                                    case Project001.Models.Entities.RoomStatus.Available:
                                        <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                                            Available
                                        </span>
                                        break;
                                    case Project001.Models.Entities.RoomStatus.Maintenance:
                                        <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-800 rounded-full">
                                            Maintenance
                                        </span>
                                        break;
                                    case Project001.Models.Entities.RoomStatus.Disabled:
                                        <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full">
                                            Disabled
                                        </span>
                                        break;
                                }
                            </div>

                            <!-- Action Buttons -->
                            <div class="flex space-x-2">
                                <a asp-action="Details" asp-route-id="@room.Id" 
                                   class="flex-1 text-center bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-md text-sm transition-colors duration-200">
                                    View Details
                                </a>
                                <a asp-action="Availability" asp-route-id="@room.Id" 
                                   class="flex-1 text-center bg-gray-600 hover:bg-gray-700 text-white px-3 py-2 rounded-md text-sm transition-colors duration-200">
                                    Availability
                                </a>
                                @if (User.IsInRole("Admin"))
                                {
                                    <a asp-action="Edit" asp-route-id="@room.Id" 
                                       class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-2 rounded-md text-sm transition-colors duration-200">
                                        Edit
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M34 40h10v-4a6 6 0 00-10.712-3.714M34 40H14m20 0v-4a9.971 9.971 0 00-.712-3.714M14 40H4v-4a6 6 0 0110.713-3.714M14 40v-4c0-1.313.253-2.566.713-3.714m0 0A10.003 10.003 0 0124 26c4.21 0 7.813 2.602 9.288 6.286M30 14a6 6 0 11-12 0 6 6 0 0112 0zm12 6a4 4 0 11-8 0 4 4 0 018 0zm-28 0a4 4 0 11-8 0 4 4 0 018 0z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">No rooms found</h3>
                <p class="mt-1 text-sm text-gray-500">Try adjusting your search criteria or contact an administrator.</p>
            </div>
        }
    </div>
</div>