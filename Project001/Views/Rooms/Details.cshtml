@model Project001.Models.Entities.Room

@{
    ViewData["Title"] = $"Room Details - {Model.Name}";
}

<div class="max-w-4xl mx-auto">
    <div class="bg-white shadow rounded-lg overflow-hidden">
        <!-- Header -->
        <div class="px-6 py-4 border-b border-gray-200">
            <div class="flex justify-between items-center">
                <h1 class="text-2xl font-semibold text-gray-900">@Model.Name</h1>
                <div class="flex space-x-2">
                    <a asp-action="Availability" asp-route-id="@Model.Id" 
                       class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                        Check Availability
                    </a>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@Model.Id" 
                           class="bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                            Edit Room
                        </a>
                    }
                    <a asp-action="Index" 
                       class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                        Back to Rooms
                    </a>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 p-6">
            <!-- Room Image -->
            <div class="lg:col-span-1">
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="@Model.ImageUrl" alt="@Model.Name" class="w-full h-64 object-cover rounded-lg">
                }
                else
                {
                    <div class="w-full h-64 bg-gray-100 rounded-lg flex items-center justify-center">
                        <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                        </svg>
                    </div>
                }
            </div>

            <!-- Room Information -->
            <div class="lg:col-span-2">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Basic Information -->
                    <div>
                        <h3 class="text-lg font-semibold text-gray-900 mb-4">Basic Information</h3>
                        <dl class="space-y-3">
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Capacity</dt>
                                <dd class="text-sm text-gray-900">@Model.Capacity people</dd>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.Location))
                            {
                                <div>
                                    <dt class="text-sm font-medium text-gray-500">Location</dt>
                                    <dd class="text-sm text-gray-900">@Model.Location</dd>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Floor))
                            {
                                <div>
                                    <dt class="text-sm font-medium text-gray-500">Floor</dt>
                                    <dd class="text-sm text-gray-900">@Model.Floor</dd>
                                </div>
                            }
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Status</dt>
                                <dd class="text-sm">
                                    @switch (Model.Status)
                                    {
                                        case Project001.Models.Entities.RoomStatus.Available:
                                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                                                Available
                                            </span>
                                            break;
                                        case Project001.Models.Entities.RoomStatus.Maintenance:
                                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-800 rounded-full">
                                                Under Maintenance
                                            </span>
                                            break;
                                        case Project001.Models.Entities.RoomStatus.Disabled:
                                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full">
                                                Disabled
                                            </span>
                                            break;
                                    }
                                </dd>
                            </div>
                            @if (Model.HourlyRate.HasValue)
                            {
                                <div>
                                    <dt class="text-sm font-medium text-gray-500">Hourly Rate</dt>
                                    <dd class="text-sm text-gray-900">$@Model.HourlyRate.Value.ToString("F2")</dd>
                                </div>
                            }
                        </dl>
                    </div>

                    <!-- Equipment -->
                    <div>
                        <h3 class="text-lg font-semibold text-gray-900 mb-4">Equipment & Amenities</h3>
                        <div class="space-y-2">
                            <div class="flex items-center">
                                <span class="w-4 h-4 mr-2">
                                    @if (Model.HasProjector)
                                    {
                                        <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                    else
                                    {
                                        <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                </span>
                                <span class="text-sm text-gray-900">Projector</span>
                            </div>
                            <div class="flex items-center">
                                <span class="w-4 h-4 mr-2">
                                    @if (Model.HasVideoConference)
                                    {
                                        <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                    else
                                    {
                                        <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                </span>
                                <span class="text-sm text-gray-900">Video Conference</span>
                            </div>
                            <div class="flex items-center">
                                <span class="w-4 h-4 mr-2">
                                    @if (Model.HasWhiteboard)
                                    {
                                        <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                    else
                                    {
                                        <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                </span>
                                <span class="text-sm text-gray-900">Whiteboard</span>
                            </div>
                            <div class="flex items-center">
                                <span class="w-4 h-4 mr-2">
                                    @if (Model.HasPhone)
                                    {
                                        <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                    else
                                    {
                                        <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                </span>
                                <span class="text-sm text-gray-900">Phone</span>
                            </div>
                            <div class="flex items-center">
                                <span class="w-4 h-4 mr-2">
                                    @if (Model.HasComputer)
                                    {
                                        <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                    else
                                    {
                                        <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                        </svg>
                                    }
                                </span>
                                <span class="text-sm text-gray-900">Computer</span>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(Model.Equipment))
                        {
                            <div class="mt-4">
                                <dt class="text-sm font-medium text-gray-500 mb-1">Additional Equipment</dt>
                                <dd class="text-sm text-gray-900">@Model.Equipment</dd>
                            </div>
                        }
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="mt-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-2">Description</h3>
                        <p class="text-sm text-gray-700">@Model.Description</p>
                    </div>
                }
            </div>
        </div>

        <!-- Today's Bookings -->
        <div class="border-t border-gray-200 px-6 py-4">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Today's Schedule</h3>
            @if (Model.Bookings.Any())
            {
                <div class="space-y-2">
                    @foreach (var booking in Model.Bookings.OrderBy(b => b.StartDateTime))
                    {
                        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md">
                            <div>
                                <h4 class="text-sm font-medium text-gray-900">@booking.Title</h4>
                                <p class="text-sm text-gray-600">@booking.User.FullName</p>
                            </div>
                            <div class="text-right">
                                <p class="text-sm text-gray-900">
                                    @booking.StartDateTime.ToString("HH:mm") - @booking.EndDateTime.ToString("HH:mm")
                                </p>
                                <p class="text-xs text-gray-500">
                                    @booking.Duration.TotalHours.ToString("F1")h
                                </p>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-sm text-gray-500">No bookings for today</p>
            }
        </div>
    </div>
</div>