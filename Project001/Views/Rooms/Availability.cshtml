@model IEnumerable<Project001.Models.Entities.Booking>

@{
    ViewData["Title"] = $"Room Availability - {ViewData["Room"]}";
    var room = ViewData["Room"] as Project001.Models.Entities.Room;
    var selectedDate = (DateTime)ViewData["SelectedDate"];
}

<div class="max-w-4xl mx-auto">
    <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
            <div class="flex justify-between items-center">
                <h1 class="text-2xl font-semibold text-gray-900">@room.Name - Availability</h1>
                <div class="flex space-x-2">
                    <a href="#" onclick="bookRoom(@room.Id)" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                        Book Room
                    </a>
                    <a asp-action="Details" asp-route-id="@room.Id" class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                        Room Details
                    </a>
                </div>
            </div>
        </div>

        <!-- Date Navigation -->
        <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
            <div class="flex items-center justify-between">
                <a asp-action="Availability" asp-route-id="@room.Id" asp-route-date="@selectedDate.AddDays(-1).ToString("yyyy-MM-dd")" 
                   class="bg-white border border-gray-300 rounded-md px-3 py-2 text-sm hover:bg-gray-50 transition-colors duration-200">
                    ← Previous Day
                </a>
                
                <div class="text-center">
                    <h2 class="text-lg font-semibold text-gray-900">@selectedDate.ToString("dddd, MMMM d, yyyy")</h2>
                    <form method="get" class="mt-2">
                        <input type="hidden" name="id" value="@room.Id" />
                        <input type="date" name="date" value="@selectedDate.ToString("yyyy-MM-dd")" 
                               onchange="this.form.submit()"
                               class="border border-gray-300 rounded-md px-3 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </form>
                </div>
                
                <a asp-action="Availability" asp-route-id="@room.Id" asp-route-date="@selectedDate.AddDays(1).ToString("yyyy-MM-dd")" 
                   class="bg-white border border-gray-300 rounded-md px-3 py-2 text-sm hover:bg-gray-50 transition-colors duration-200">
                    Next Day →
                </a>
            </div>
        </div>

        <!-- Time Schedule -->
        <div class="p-6">
            <div class="grid grid-cols-1 gap-2">
                @{
                    var businessHours = Enumerable.Range(8, 12); // 8 AM to 7 PM
                    var bookingDict = Model.ToDictionary(b => new { Start = b.StartDateTime.Hour, End = b.EndDateTime.Hour }, b => b);
                }
                
                @foreach (var hour in businessHours)
                {
                    var timeSlot = new DateTime(selectedDate.Year, selectedDate.Month, selectedDate.Day, hour, 0, 0);
                    var timeSlotEnd = timeSlot.AddHours(1);
                    var isBooked = Model.Any(b => 
                        b.StartDateTime <= timeSlot && 
                        b.EndDateTime > timeSlot);
                    var booking = Model.FirstOrDefault(b => 
                        b.StartDateTime <= timeSlot && 
                        b.EndDateTime > timeSlot);
                        
                    <div class="flex items-center border border-gray-200 rounded-md overflow-hidden">
                        <div class="w-24 px-4 py-3 bg-gray-50 text-sm font-medium text-gray-900 border-r border-gray-200">
                            @timeSlot.ToString("h:mm tt")
                        </div>
                        
                        @if (isBooked && booking != null)
                        {
                            <div class="flex-1 px-4 py-3 bg-red-50 border-l-4 border-red-400">
                                <div class="flex justify-between items-center">
                                    <div>
                                        <p class="text-sm font-medium text-red-900">@booking.Title</p>
                                        <p class="text-xs text-red-700">
                                            @booking.User.FullName • 
                                            @booking.StartDateTime.ToString("h:mm tt") - @booking.EndDateTime.ToString("h:mm tt")
                                        </p>
                                        @if (!string.IsNullOrEmpty(booking.Description))
                                        {
                                            <p class="text-xs text-red-600 mt-1">@booking.Description</p>
                                        }
                                    </div>
                                    <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full">
                                        Booked
                                    </span>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="flex-1 px-4 py-3 bg-green-50 border-l-4 border-green-400">
                                <div class="flex justify-between items-center">
                                    <div>
                                        <p class="text-sm font-medium text-green-900">Available</p>
                                        <p class="text-xs text-green-700">This time slot is free for booking</p>
                                    </div>
                                    <div class="flex space-x-2">
                                        <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                                            Available
                                        </span>
                                        @if (timeSlot > DateTime.Now)
                                        {
                                            <button onclick="bookTimeSlot(@room.Id, '@timeSlot.ToString("yyyy-MM-ddTHH:mm:ss")')" 
                                                    class="bg-green-600 hover:bg-green-700 text-white px-2 py-1 rounded text-xs transition-colors duration-200">
                                                Book
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>

        <!-- Room Information Footer -->
        <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-gray-600">
                <div>
                    <span class="font-medium">Capacity:</span> @room.Capacity people
                </div>
                @if (!string.IsNullOrEmpty(room.Location))
                {
                    <div>
                        <span class="font-medium">Location:</span> @room.Location
                    </div>
                }
                @if (room.HourlyRate.HasValue)
                {
                    <div>
                        <span class="font-medium">Rate:</span> $@room.HourlyRate.Value.ToString("F2")/hour
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
function bookRoom(roomId) {
    // Redirect to booking page
    window.location.href = '/Bookings/Create?roomId=' + roomId + '&date=@selectedDate.ToString("yyyy-MM-dd")';
}

function bookTimeSlot(roomId, startTime) {
    // Redirect to booking page with specific time
    window.location.href = '/Bookings/Create?roomId=' + roomId + '&startTime=' + encodeURIComponent(startTime);
}
</script>