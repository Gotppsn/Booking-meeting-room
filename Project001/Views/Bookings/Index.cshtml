@model IEnumerable<Project001.Models.Entities.Booking>

@{
    ViewData["Title"] = "My Bookings";
}

<div class="bg-white shadow rounded-lg">
    <div class="px-6 py-4 border-b border-gray-200">
        <div class="flex justify-between items-center">
            <h1 class="text-2xl font-semibold text-gray-900">My Bookings</h1>
            <a asp-action="Create" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                New Booking
            </a>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
        <form method="get" class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
                <label for="startDate" class="block text-sm font-medium text-gray-700 mb-1">Start Date</label>
                <input type="date" name="startDate" id="startDate" value="@ViewData["StartDate"]" 
                       class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
            </div>
            <div>
                <label for="endDate" class="block text-sm font-medium text-gray-700 mb-1">End Date</label>
                <input type="date" name="endDate" id="endDate" value="@ViewData["EndDate"]" 
                       class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
            </div>
            <div>
                <label for="status" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                <select name="status" id="status" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    <option value="">All Status</option>
                    @foreach (var status in Enum.GetValues<Project001.Models.Entities.BookingStatus>())
                    {
                        <option value="@((int)status)" selected="@(ViewData["Status"]?.ToString() == ((int)status).ToString())">@status</option>
                    }
                </select>
            </div>
            <div class="flex items-end">
                <button type="submit" class="w-full bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                    Filter
                </button>
            </div>
        </form>
    </div>

    <!-- Bookings List -->
    <div class="p-6">
        @if (Model.Any())
        {
            <div class="space-y-4">
                @foreach (var booking in Model)
                {
                    <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow duration-200">
                        <div class="flex justify-between items-start">
                            <div class="flex-1">
                                <div class="flex items-center space-x-3 mb-2">
                                    <h3 class="text-lg font-semibold text-gray-900">@booking.Title</h3>
                                    @switch (booking.Status)
                                    {
                                        case Project001.Models.Entities.BookingStatus.Confirmed:
                                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                                                Confirmed
                                            </span>
                                            break;
                                        case Project001.Models.Entities.BookingStatus.Pending:
                                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-800 rounded-full">
                                                Pending
                                            </span>
                                            break;
                                        case Project001.Models.Entities.BookingStatus.Cancelled:
                                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full">
                                                Cancelled
                                            </span>
                                            break;
                                        case Project001.Models.Entities.BookingStatus.Completed:
                                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-gray-100 text-gray-800 rounded-full">
                                                Completed
                                            </span>
                                            break;
                                    }
                                    @if (booking.IsRecurring)
                                    {
                                        <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full">
                                            Recurring
                                        </span>
                                    }
                                </div>

                                <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-gray-600">
                                    <div class="flex items-center">
                                        <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                                        </svg>
                                        <span class="font-medium">Room:</span> @booking.Room.Name
                                    </div>
                                    <div class="flex items-center">
                                        <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                        </svg>
                                        <span class="font-medium">Date:</span> @booking.StartDateTime.ToString("MMM dd, yyyy")
                                    </div>
                                    <div class="flex items-center">
                                        <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        <span class="font-medium">Time:</span> @booking.StartDateTime.ToString("h:mm tt") - @booking.EndDateTime.ToString("h:mm tt")
                                    </div>
                                </div>

                                @if (!string.IsNullOrEmpty(booking.Description))
                                {
                                    <p class="text-sm text-gray-600 mt-2">@booking.Description</p>
                                }

                                @if (booking.AttendeeCount.HasValue)
                                {
                                    <p class="text-sm text-gray-600 mt-1">
                                        <span class="font-medium">Attendees:</span> @booking.AttendeeCount people
                                    </p>
                                }

                                @if (!string.IsNullOrEmpty(booking.CancellationReason))
                                {
                                    <p class="text-sm text-red-600 mt-2">
                                        <span class="font-medium">Cancellation Reason:</span> @booking.CancellationReason
                                    </p>
                                }
                            </div>

                            <div class="flex flex-col space-y-2 ml-4">
                                <a asp-action="Details" asp-route-id="@booking.Id" 
                                   class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm text-center transition-colors duration-200">
                                    View
                                </a>
                                
                                @if (booking.Status == Project001.Models.Entities.BookingStatus.Confirmed && booking.StartDateTime > DateTime.Now)
                                {
                                    <a asp-action="Edit" asp-route-id="@booking.Id" 
                                       class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-1 rounded text-sm text-center transition-colors duration-200">
                                        Edit
                                    </a>
                                    
                                    <button onclick="cancelBooking(@booking.Id)" 
                                            class="bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm transition-colors duration-200">
                                        Cancel
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination placeholder -->
            <div class="mt-8 flex justify-center">
                <nav class="flex items-center space-x-2">
                    <!-- Add pagination controls here if needed -->
                </nav>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M8 14v20c0 4.418 7.163 8 16 8 1.381 0 2.721-.087 4-.252M8 14c0 4.418 7.163 8 16 8s16-3.582 16-8M8 14c0-4.418 7.163-8 16-8s16 3.582 16 8m0 0v14m0-4c0 4.418-7.163 8-16 8S8 28.418 8 24m32 10v6m0 0v6m0-6h6m-6 0h-6" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">No bookings found</h3>
                <p class="mt-1 text-sm text-gray-500">Get started by creating your first room booking.</p>
                <div class="mt-6">
                    <a asp-action="Create" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm transition-colors duration-200">
                        Create Booking
                    </a>
                </div>
            </div>
        }
    </div>
</div>

<!-- Cancel Booking Modal -->
<div id="cancelModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Cancel Booking</h3>
            <form id="cancelForm" method="post">
                @Html.AntiForgeryToken()
                <div class="mb-4">
                    <label for="reason" class="block text-sm font-medium text-gray-700 mb-2">Reason for cancellation (optional)</label>
                    <textarea name="reason" id="reason" rows="3" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Please provide a reason for cancelling this booking..."></textarea>
                </div>
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="closeCancelModal()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md transition-colors duration-200">
                        Cancel
                    </button>
                    <button type="submit" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                        Cancel Booking
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
function cancelBooking(bookingId) {
    document.getElementById('cancelForm').action = '/Bookings/Cancel/' + bookingId;
    document.getElementById('cancelModal').classList.remove('hidden');
}

function closeCancelModal() {
    document.getElementById('cancelModal').classList.add('hidden');
}

// Close modal when clicking outside
document.getElementById('cancelModal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeCancelModal();
    }
});
</script>