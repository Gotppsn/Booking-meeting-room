@model Project001.Models.Entities.Booking

@{
    ViewData["Title"] = "Create Booking";
}

<div class="max-w-2xl mx-auto">
    <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
            <h1 class="text-2xl font-semibold text-gray-900">Create New Booking</h1>
        </div>

        <form asp-action="Create" class="p-6">
            <div asp-validation-summary="ModelOnly" class="text-red-600 mb-4"></div>
            
            <div class="space-y-6">
                <!-- Basic Information -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="md:col-span-2">
                        <label asp-for="Title" class="block text-sm font-medium text-gray-700 mb-1">Meeting Title</label>
                        <input asp-for="Title" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Enter meeting title" />
                        <span asp-validation-for="Title" class="text-red-600 text-sm"></span>
                    </div>

                    <div>
                        <label asp-for="RoomId" class="block text-sm font-medium text-gray-700 mb-1">Room</label>
                        <select asp-for="RoomId" asp-items="ViewBag.RoomId" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            <option value="">Select a room</option>
                        </select>
                        <span asp-validation-for="RoomId" class="text-red-600 text-sm"></span>
                    </div>

                    <div>
                        <label asp-for="AttendeeCount" class="block text-sm font-medium text-gray-700 mb-1">Number of Attendees</label>
                        <input asp-for="AttendeeCount" type="number" min="1" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                        <span asp-validation-for="AttendeeCount" class="text-red-600 text-sm"></span>
                    </div>
                </div>

                <!-- Date and Time -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label asp-for="StartDateTime" class="block text-sm font-medium text-gray-700 mb-1">Start Date & Time</label>
                        <input asp-for="StartDateTime" type="datetime-local" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                        <span asp-validation-for="StartDateTime" class="text-red-600 text-sm"></span>
                    </div>

                    <div>
                        <label asp-for="EndDateTime" class="block text-sm font-medium text-gray-700 mb-1">End Date & Time</label>
                        <input asp-for="EndDateTime" type="datetime-local" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                        <span asp-validation-for="EndDateTime" class="text-red-600 text-sm"></span>
                    </div>
                </div>

                <!-- Description -->
                <div>
                    <label asp-for="Description" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                    <textarea asp-for="Description" rows="3" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Enter meeting description or agenda..."></textarea>
                    <span asp-validation-for="Description" class="text-red-600 text-sm"></span>
                </div>

                <!-- Attendees -->
                <div>
                    <label asp-for="Attendees" class="block text-sm font-medium text-gray-700 mb-1">Attendees</label>
                    <textarea asp-for="Attendees" rows="2" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="List attendee names or email addresses..."></textarea>
                    <span asp-validation-for="Attendees" class="text-red-600 text-sm"></span>
                    <p class="text-sm text-gray-500 mt-1">Optional: List the names or emails of meeting attendees</p>
                </div>

                <!-- Recurring Options -->
                <div class="border-t border-gray-200 pt-6">
                    <h3 class="text-lg font-medium text-gray-900 mb-4">Recurring Meeting (Optional)</h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <label asp-for="RecurrenceType" class="block text-sm font-medium text-gray-700 mb-1">Recurrence Pattern</label>
                            <select asp-for="RecurrenceType" asp-items="Html.GetEnumSelectList<Project001.Models.Entities.RecurrenceType>()" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            </select>
                            <span asp-validation-for="RecurrenceType" class="text-red-600 text-sm"></span>
                        </div>

                        <div id="recurrenceEndDiv" style="display: none;">
                            <label asp-for="RecurrenceEnd" class="block text-sm font-medium text-gray-700 mb-1">Recurrence End Date</label>
                            <input asp-for="RecurrenceEnd" type="date" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            <span asp-validation-for="RecurrenceEnd" class="text-red-600 text-sm"></span>
                        </div>
                    </div>

                    <div id="recurrenceInfo" class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-md hidden">
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                                </svg>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm text-blue-700">
                                    This will create multiple bookings based on your recurrence pattern. 
                                    Each booking will be checked for conflicts before creation.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Booking Status -->
                <div>
                    <label asp-for="Status" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                    <select asp-for="Status" asp-items="Html.GetEnumSelectList<Project001.Models.Entities.BookingStatus>()" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    </select>
                    <span asp-validation-for="Status" class="text-red-600 text-sm"></span>
                </div>
            </div>

            <div class="flex justify-end space-x-4 mt-8 pt-6 border-t border-gray-200">
                <a asp-action="Index" class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                    Cancel
                </a>
                <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors duration-200">
                    Create Booking
                </button>
            </div>
        </form>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const recurrenceSelect = document.getElementById('RecurrenceType');
    const recurrenceEndDiv = document.getElementById('recurrenceEndDiv');
    const recurrenceInfo = document.getElementById('recurrenceInfo');

    function toggleRecurrenceOptions() {
        const selectedValue = recurrenceSelect.value;
        if (selectedValue && selectedValue !== '0') { // Not 'None'
            recurrenceEndDiv.style.display = 'block';
            recurrenceInfo.classList.remove('hidden');
        } else {
            recurrenceEndDiv.style.display = 'none';
            recurrenceInfo.classList.add('hidden');
        }
    }

    recurrenceSelect.addEventListener('change', toggleRecurrenceOptions);
    toggleRecurrenceOptions(); // Initialize on page load

    // Auto-calculate end time when start time changes
    const startTimeInput = document.getElementById('StartDateTime');
    const endTimeInput = document.getElementById('EndDateTime');

    startTimeInput.addEventListener('change', function() {
        if (this.value && !endTimeInput.value) {
            const startTime = new Date(this.value);
            const endTime = new Date(startTime.getTime() + (60 * 60 * 1000)); // Add 1 hour
            endTimeInput.value = endTime.toISOString().slice(0, 16);
        }
    });

    // Room capacity warning
    const roomSelect = document.getElementById('RoomId');
    const attendeeInput = document.getElementById('AttendeeCount');
    
    roomSelect.addEventListener('change', function() {
        // This would typically fetch room data via AJAX
        // For now, we'll just add a placeholder for capacity checking
        checkCapacity();
    });

    attendeeInput.addEventListener('change', checkCapacity);

    function checkCapacity() {
        // Placeholder for capacity checking logic
        // In a real implementation, you'd fetch room capacity and compare
    }
});
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}